<?xml version="1.0" encoding="UTF-8"?>

<web-app>
    <display-name>Archetype Created Web Application</display-name>

    <!-- 项目欢迎界面 -->
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <!--默认的路径是/WEB-INF/applicationContext.xml  -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 如果是要自定义文件名可以在web.xml里加入contextConfigLocation这个context参数 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!--配置DispatcherServlet-->
    <servlet>
        <servlet-name>spring3</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring3</servlet-name>
        <!-- *.do 这里可以用 /匹配所有请求, 但不能用 /* ，拦截了所有请求会导致静态资源无法访问，所以要在spring3-servlet.xml中配置mvc:resources -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>sysUtil</servlet-name>
        <servlet-class>com.emi.roots.util.SysUtilServlet</servlet-class>
        <load-on-startup>5</load-on-startup>
    </servlet>


    <filter>
        <filter-name>login</filter-name>
        <filter-class>com.emi.roots.util.LoginFilter</filter-class>

        <init-param>
            <param-name>loginPage</param-name>
            <param-value>/index.do</param-value>
        </init-param>

        <init-param>
            <param-name>webname</param-name>
            <param-value>/appweb/</param-value>
        </init-param>

        <init-param>
            <param-name>ignorePages</param-name>
            <param-value>
                /ws/*,/mobile/*,/bullActivity/*,/login.do,/upload/*,/back/scripts/*,/back/assets/*,/front/*,/wechat/*,/imgManager/*,/mobile/*,/activitydraw/*,/api/*,/MP_verify_6fVTiC4q3bWVZngE.txt
            </param-value>
        </init-param>
        <init-param>
            <param-name>ignoreExtensions</param-name>
            <param-value>
                jpeg, gif, css, jpg, js, htm, html, swf, png, JPEG, GIF, CSS, JPG, JS, HTM, HTML, SWF, PNG, TTF, ttf,
                eot, EOT, svg, SVG, woff, WOFF, txt
            </param-value>
        </init-param>

    </filter>

    <filter-mapping>
        <filter-name>login</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value><!-- 强制进行转码 -->
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/error.jsp</location>
    </error-page>

    <!--session有效期-->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>


    <!--验证码-->
    <servlet>
        <servlet-name>Kaptcha</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
        <init-param>
            <param-name>kaptcha.border</param-name>
            <param-value>no</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.font.color</param-name>
            <param-value>blue</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.char.length</param-name>
            <param-value>4</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.font.size</param-name>
            <param-value>25</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.image.width</param-name>
            <param-value>80</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.image.height</param-name>
            <param-value>40</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.char.space</param-name>
            <param-value>1</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.char.string</param-name>
            <param-value>23456789</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.textproducer.font.names</param-name>
            <param-value>宋体,Arial,Courier</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.obscurificator.impl</param-name>
            <param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
        </init-param>
        <!--干扰线-->
        <init-param>
            <param-name>kaptcha.noise.impl</param-name>
            <param-value>com.google.code.kaptcha.impl.DefaultNoise</param-value>
        </init-param>
        <init-param>
            <param-name>kaptcha.noise.color</param-name>
            <param-value>black</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Kaptcha</servlet-name>
        <url-pattern>/kaptcha.jpg</url-pattern>
    </servlet-mapping>


</web-app>
