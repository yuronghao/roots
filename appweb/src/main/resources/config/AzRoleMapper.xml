<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.roots.mapper.AzRoleMapper" >
  <resultMap id="BaseResultMap" type="com.emi.roots.entity.AzRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="SMALLINT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="INTEGER" />
    <result column="update_time" property="update_time" jdbcType="INTEGER" />
    <result column="listorder" property="listorder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, pid, status, remark, create_time, update_time, listorder
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from az_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from az_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.emi.roots.entity.AzRole" >
    insert into az_role (id, name, pid, 
      status, remark, create_time, 
      update_time, listorder)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pid,jdbcType=SMALLINT}, 
      #{status,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{create_time},
      #{update_time,jdbcType=INTEGER}, #{listorder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.emi.roots.entity.AzRole" >
    insert into az_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
      <if test="listorder != null" >
        listorder,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=INTEGER},
      </if>
      <if test="listorder != null" >
        #{listorder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.roots.entity.AzRole" >
    update az_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=INTEGER},
      </if>
      <if test="listorder != null" >
        listorder = #{listorder,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.roots.entity.AzRole" >
    update az_role
    set name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=SMALLINT},
      status = #{status,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{create_time},
      update_time = #{update_time,jdbcType=INTEGER},
      listorder = #{listorder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>