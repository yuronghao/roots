<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.roots.mapper.AzAuthRuleMapper" >
  <resultMap id="BaseResultMap" type="com.emi.roots.entity.AzAuthRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="param" property="param" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="condition" property="condition" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, module, type, name, param, title, status, condition
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from az_auth_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from az_auth_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.emi.roots.entity.AzAuthRule" >
    insert into az_auth_rule (id, module, type, 
      name, param, title, 
      status, condition)
    values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{condition,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emi.roots.entity.AzAuthRule" >
    insert into az_auth_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="param != null" >
        param,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="condition != null" >
        condition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="condition != null" >
        #{condition,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.roots.entity.AzAuthRule" >
    update az_auth_rule
    <set >
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="condition != null" >
        condition = #{condition,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.roots.entity.AzAuthRule" >
    update az_auth_rule
    set module = #{module,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      condition = #{condition,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>