<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.roots.mapper.AzSlideMapper" >
  <resultMap id="BaseResultMap" type="com.emi.roots.entity.AzSlide" >
    <id column="slide_id" property="slide_id" jdbcType="BIGINT" />
    <result column="slide_cid" property="slide_cid" jdbcType="INTEGER" />
    <result column="slide_name" property="slide_name" jdbcType="VARCHAR" />
    <result column="slide_pic" property="slide_pic" jdbcType="VARCHAR" />
    <result column="slide_url" property="slide_url" jdbcType="VARCHAR" />
    <result column="slide_des" property="slide_des" jdbcType="VARCHAR" />
    <result column="slide_status" property="slide_status" jdbcType="INTEGER" />
    <result column="listorder" property="listorder" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.emi.roots.entity.AzSlide" extends="BaseResultMap" >
    <result column="slide_content" property="slide_content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    slide_id, slide_cid, slide_name, slide_pic, slide_url, slide_des, slide_status, listorder, 
    creator
  </sql>
  <sql id="Blob_Column_List" >
    slide_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from az_slide
    where slide_id = #{slide_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from az_slide
    where slide_id = #{slide_id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.emi.roots.entity.AzSlide" >
    insert into az_slide (slide_id, slide_cid, slide_name, 
      slide_pic, slide_url, slide_des, 
      slide_status, listorder, creator, 
      slide_content)
    values (#{slide_id,jdbcType=BIGINT}, #{slide_cid,jdbcType=INTEGER}, #{slide_name,jdbcType=VARCHAR}, 
      #{slide_pic,jdbcType=VARCHAR}, #{slide_url,jdbcType=VARCHAR}, #{slide_des,jdbcType=VARCHAR}, 
      #{slide_status,jdbcType=INTEGER}, #{listorder,jdbcType=INTEGER}, #{creator,jdbcType=INTEGER}, 
      #{slide_content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emi.roots.entity.AzSlide" >
    insert into az_slide
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="slide_id != null" >
        slide_id,
      </if>
      <if test="slide_cid != null" >
        slide_cid,
      </if>
      <if test="slide_name != null" >
        slide_name,
      </if>
      <if test="slide_pic != null" >
        slide_pic,
      </if>
      <if test="slide_url != null" >
        slide_url,
      </if>
      <if test="slide_des != null" >
        slide_des,
      </if>
      <if test="slide_status != null" >
        slide_status,
      </if>
      <if test="listorder != null" >
        listorder,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="slide_content != null" >
        slide_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="slide_id != null" >
        #{slide_id,jdbcType=BIGINT},
      </if>
      <if test="slide_cid != null" >
        #{slide_cid,jdbcType=INTEGER},
      </if>
      <if test="slide_name != null" >
        #{slide_name,jdbcType=VARCHAR},
      </if>
      <if test="slide_pic != null" >
        #{slide_pic,jdbcType=VARCHAR},
      </if>
      <if test="slide_url != null" >
        #{slide_url,jdbcType=VARCHAR},
      </if>
      <if test="slide_des != null" >
        #{slide_des,jdbcType=VARCHAR},
      </if>
      <if test="slide_status != null" >
        #{slide_status,jdbcType=INTEGER},
      </if>
      <if test="listorder != null" >
        #{listorder,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="slide_content != null" >
        #{slide_content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.roots.entity.AzSlide" >
    update az_slide
    <set >
      <if test="slide_cid != null" >
        slide_cid = #{slide_cid,jdbcType=INTEGER},
      </if>
      <if test="slide_name != null" >
        slide_name = #{slide_name,jdbcType=VARCHAR},
      </if>
      <if test="slide_pic != null" >
        slide_pic = #{slide_pic,jdbcType=VARCHAR},
      </if>
      <if test="slide_url != null" >
        slide_url = #{slide_url,jdbcType=VARCHAR},
      </if>
      <if test="slide_des != null" >
        slide_des = #{slide_des,jdbcType=VARCHAR},
      </if>
      <if test="slide_status != null" >
        slide_status = #{slide_status,jdbcType=INTEGER},
      </if>
      <if test="listorder != null" >
        listorder = #{listorder,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="slide_content != null" >
        slide_content = #{slide_content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where slide_id = #{slide_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emi.roots.entity.AzSlide" >
    update az_slide
    set slide_cid = #{slide_cid,jdbcType=INTEGER},
      slide_name = #{slide_name,jdbcType=VARCHAR},
      slide_pic = #{slide_pic,jdbcType=VARCHAR},
      slide_url = #{slide_url,jdbcType=VARCHAR},
      slide_des = #{slide_des,jdbcType=VARCHAR},
      slide_status = #{slide_status,jdbcType=INTEGER},
      listorder = #{listorder,jdbcType=INTEGER},
      creator = #{creator,jdbcType=INTEGER},
      slide_content = #{slide_content,jdbcType=LONGVARCHAR}
    where slide_id = #{slide_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.roots.entity.AzSlide" >
    update az_slide
    set slide_cid = #{slide_cid,jdbcType=INTEGER},
      slide_name = #{slide_name,jdbcType=VARCHAR},
      slide_pic = #{slide_pic,jdbcType=VARCHAR},
      slide_url = #{slide_url,jdbcType=VARCHAR},
      slide_des = #{slide_des,jdbcType=VARCHAR},
      slide_status = #{slide_status,jdbcType=INTEGER},
      listorder = #{listorder,jdbcType=INTEGER},
      creator = #{creator,jdbcType=INTEGER}
    where slide_id = #{slide_id,jdbcType=BIGINT}
  </update>
</mapper>