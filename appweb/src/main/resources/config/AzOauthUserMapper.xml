<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.roots.mapper.AzOauthUserMapper" >
  <resultMap id="BaseResultMap" type="com.emi.roots.entity.AzOauthUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="from" property="from" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="head_img" property="head_img" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="last_login_ip" jdbcType="VARCHAR" />
    <result column="last_login_time" property="last_login_time" jdbcType="TIMESTAMP" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="login_times" property="login_times" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="user_status" property="user_status" jdbcType="INTEGER" />
    <result column="gag" property="gag" jdbcType="TINYINT" />
    <result column="follow_num" property="follow_num" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.emi.roots.entity.AzOauthUser" extends="BaseResultMap" >
    <result column="wechat_user_options" property="wechat_user_options" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, from, name, head_img, uid, last_login_ip, last_login_time, create_time, login_times, 
    status, openid, user_status, gag, follow_num
  </sql>
  <sql id="Blob_Column_List" >
    wechat_user_options
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from az_oauth_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from az_oauth_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.emi.roots.entity.AzOauthUser" >
    insert into az_oauth_user (id, from, name, 
      head_img, uid, last_login_ip, 
      last_login_time, create_time, login_times, 
      status, openid, user_status, 
      gag, follow_num, wechat_user_options
      )
    values (#{id,jdbcType=INTEGER}, #{from,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{head_img,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{last_login_ip,jdbcType=VARCHAR}, 
      #{last_login_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP}, #{login_times,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{user_status,jdbcType=INTEGER}, 
      #{gag,jdbcType=TINYINT}, #{follow_num,jdbcType=INTEGER}, #{wechat_user_options,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.emi.roots.entity.AzOauthUser" >
    insert into az_oauth_user
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="from != null" >
        from,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="head_img != null" >
        head_img,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="last_login_ip != null" >
        last_login_ip,
      </if>
      <if test="last_login_time != null" >
        last_login_time,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="login_times != null" >
        login_times,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="user_status != null" >
        user_status,
      </if>
      <if test="gag != null" >
        gag,
      </if>
      <if test="follow_num != null" >
        follow_num,
      </if>
      <if test="wechat_user_options != null" >
        wechat_user_options,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="from != null" >
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="head_img != null" >
        #{head_img,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="last_login_ip != null" >
        #{last_login_ip,jdbcType=VARCHAR},
      </if>
      <if test="last_login_time != null" >
        #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="login_times != null" >
        #{login_times,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="user_status != null" >
        #{user_status,jdbcType=INTEGER},
      </if>
      <if test="gag != null" >
        #{gag,jdbcType=TINYINT},
      </if>
      <if test="follow_num != null" >
        #{follow_num,jdbcType=INTEGER},
      </if>
      <if test="wechat_user_options != null" >
        #{wechat_user_options,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.roots.entity.AzOauthUser" >
    update az_oauth_user
    <set >
      <if test="from != null" >
        from = #{from,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="head_img != null" >
        head_img = #{head_img,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="last_login_ip != null" >
        last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
      </if>
      <if test="last_login_time != null" >
        last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="login_times != null" >
        login_times = #{login_times,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="user_status != null" >
        user_status = #{user_status,jdbcType=INTEGER},
      </if>
      <if test="gag != null" >
        gag = #{gag,jdbcType=TINYINT},
      </if>
      <if test="follow_num != null" >
        follow_num = #{follow_num,jdbcType=INTEGER},
      </if>
      <if test="wechat_user_options != null" >
        wechat_user_options = #{wechat_user_options,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emi.roots.entity.AzOauthUser" >
    update az_oauth_user
    set from = #{from,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      head_img = #{head_img,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
      last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      login_times = #{login_times,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      user_status = #{user_status,jdbcType=INTEGER},
      gag = #{gag,jdbcType=TINYINT},
      follow_num = #{follow_num,jdbcType=INTEGER},
      wechat_user_options = #{wechat_user_options,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.roots.entity.AzOauthUser" >
    update az_oauth_user
    set from = #{from,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      head_img = #{head_img,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
      last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      login_times = #{login_times,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      user_status = #{user_status,jdbcType=INTEGER},
      gag = #{gag,jdbcType=TINYINT},
      follow_num = #{follow_num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>