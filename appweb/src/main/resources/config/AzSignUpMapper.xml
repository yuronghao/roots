<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.roots.mapper.AzSignUpMapper" >
  <resultMap id="BaseResultMap" type="com.emi.roots.entity.AzSignUp" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="object_id" property="object_id" jdbcType="INTEGER" />
    <result column="sign_status" property="sign_status" jdbcType="BIT" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="check_time" property="check_time" jdbcType="TIMESTAMP" />
    <result column="audit_status" property="audit_status" jdbcType="BIT" />
    <result column="pay_status" property="pay_status" jdbcType="BIT" />
    <result column="order_id" property="order_id" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.emi.roots.entity.AzSignUp" extends="BaseResultMap" >
    <result column="opus" property="opus" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, object_id, sign_status, create_time, check_time, audit_status, pay_status, 
    order_id, comment
  </sql>
  <sql id="Blob_Column_List" >
    opus
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from az_sign_up
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from az_sign_up
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.emi.roots.entity.AzSignUp" >
    insert into az_sign_up (id, uid, object_id, 
      sign_status, create_time, check_time, 
      audit_status, pay_status, order_id, 
      comment, opus)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{object_id,jdbcType=INTEGER}, 
      #{sign_status,jdbcType=BIT}, #{create_time,jdbcType=TIMESTAMP}, #{check_time,jdbcType=TIMESTAMP}, 
      #{audit_status,jdbcType=BIT}, #{pay_status,jdbcType=BIT}, #{order_id,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{opus,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emi.roots.entity.AzSignUp" >
    insert into az_sign_up
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="uid != null" >
        uid,
      </if>
      <if test="object_id != null" >
        object_id,
      </if>
      <if test="sign_status != null" >
        sign_status,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="check_time != null" >
        check_time,
      </if>
      <if test="audit_status != null" >
        audit_status,
      </if>
      <if test="pay_status != null" >
        pay_status,
      </if>
      <if test="order_id != null" >
        order_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="opus != null" >
        opus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="object_id != null" >
        #{object_id,jdbcType=INTEGER},
      </if>
      <if test="sign_status != null" >
        #{sign_status,jdbcType=BIT},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="check_time != null" >
        #{check_time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit_status != null" >
        #{audit_status,jdbcType=BIT},
      </if>
      <if test="pay_status != null" >
        #{pay_status,jdbcType=BIT},
      </if>
      <if test="order_id != null" >
        #{order_id,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="opus != null" >
        #{opus,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.roots.entity.AzSignUp" >
    update az_sign_up
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="object_id != null" >
        object_id = #{object_id,jdbcType=INTEGER},
      </if>
      <if test="sign_status != null" >
        sign_status = #{sign_status,jdbcType=BIT},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="check_time != null" >
        check_time = #{check_time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit_status != null" >
        audit_status = #{audit_status,jdbcType=BIT},
      </if>
      <if test="pay_status != null" >
        pay_status = #{pay_status,jdbcType=BIT},
      </if>
      <if test="order_id != null" >
        order_id = #{order_id,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="opus != null" >
        opus = #{opus,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emi.roots.entity.AzSignUp" >
    update az_sign_up
    set uid = #{uid,jdbcType=INTEGER},
      object_id = #{object_id,jdbcType=INTEGER},
      sign_status = #{sign_status,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      check_time = #{check_time,jdbcType=TIMESTAMP},
      audit_status = #{audit_status,jdbcType=BIT},
      pay_status = #{pay_status,jdbcType=BIT},
      order_id = #{order_id,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      opus = #{opus,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.roots.entity.AzSignUp" >
    update az_sign_up
    set uid = #{uid,jdbcType=INTEGER},
      object_id = #{object_id,jdbcType=INTEGER},
      sign_status = #{sign_status,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      check_time = #{check_time,jdbcType=TIMESTAMP},
      audit_status = #{audit_status,jdbcType=BIT},
      pay_status = #{pay_status,jdbcType=BIT},
      order_id = #{order_id,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <delete id="deleteAzLike">
    DELETE  from az_like where object_id = '${matchid}' and uid = '${userid}' and tablename = '${tablename}'

  </delete>


  <update id="updatePostLikeNumsub">
    UPDATE az_posts ap set ap.post_like = ap.post_like -1 where ap.id = '${matchid}'

  </update>


  <update id="updatePostLikeNumadd">
UPDATE az_posts ap set ap.post_like = ap.post_like +1 where ap.id = '${matchid}'

  </update>


  <update id="updateCommentLikenumsub">
    UPDATE az_reply ap set ap.praise_num = ap.praise_num -1 where ap.id = '${matchid}'
  </update>
</mapper>