<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emi.emiservice.mapper.ActivityprizeMapper" >
  <resultMap id="BaseResultMap" type="com.emi.emiservice.entity.Activityprize" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activityid" property="activityid" jdbcType="INTEGER" />
    <result column="rounds" property="rounds" jdbcType="INTEGER" />
    <result column="ranking" property="ranking" jdbcType="INTEGER" />
    <result column="winningnums" property="winningnums" jdbcType="INTEGER" />
    <result column="prizename" property="prizename" jdbcType="VARCHAR" />
    <result column="prizeimg" property="prizeimg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, activityid, rounds, ranking, winningnums, prizename, prizeimg
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    *
    from activityprize
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activityprize
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.emi.emiservice.entity.Activityprize" >
    insert into activityprize (activityid, rounds,
      ranking, winningnums, prizename, 
      prizeimg)
    values (#{activityid,jdbcType=INTEGER}, #{rounds,jdbcType=INTEGER},
      #{ranking,jdbcType=VARCHAR}, #{winningnums,jdbcType=INTEGER}, #{prizename,jdbcType=VARCHAR},
      #{prizeimg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emi.emiservice.entity.Activityprize" >
    insert into activityprize
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityid != null" >
        activityid,
      </if>
      <if test="rounds != null" >
        rounds,
      </if>
      <if test="ranking != null" >
        ranking,
      </if>
      <if test="winningnums != null" >
        winningnums,
      </if>
      <if test="prizename != null" >
        prizename,
      </if>
      <if test="prizeimg != null" >
        prizeimg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityid != null" >
        #{activityid,jdbcType=INTEGER},
      </if>
      <if test="rounds != null" >
        #{rounds,jdbcType=INTEGER},
      </if>
      <if test="ranking != null" >
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="winningnums != null" >
        #{winningnums,jdbcType=INTEGER},
      </if>
      <if test="prizename != null" >
        #{prizename,jdbcType=VARCHAR},
      </if>
      <if test="prizeimg != null" >
        #{prizeimg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emi.emiservice.entity.Activityprize" >
    update activityprize
    <set >
      <if test="activityid != null" >
        activityid = #{activityid,jdbcType=INTEGER},
      </if>
      <if test="rounds != null" >
        rounds = #{rounds,jdbcType=INTEGER},
      </if>
      <if test="ranking != null" >
        ranking = #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="winningnums != null" >
        winningnums = #{winningnums,jdbcType=INTEGER},
      </if>
      <if test="prizename != null" >
        prizename = #{prizename,jdbcType=VARCHAR},
      </if>
      <if test="prizeimg != null" >
        prizeimg = #{prizeimg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emi.emiservice.entity.Activityprize" >
    update activityprize
    set activityid = #{activityid,jdbcType=INTEGER},
      rounds = #{rounds,jdbcType=INTEGER},
      ranking = #{ranking,jdbcType=INTEGER},
      winningnums = #{winningnums,jdbcType=INTEGER},
      prizename = #{prizename,jdbcType=VARCHAR},
      prizeimg = #{prizeimg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="deleteActivityPrize" >

    UPDATE activityprize ap set ap.isdel = 1 where ap.id = '${id}'
  </update>


  <select id="getActivityPrizeListById" resultType="com.emi.emiservice.entity.Activityprize">
    SELECT * from activityprize where activityid=#{activityid} and isdel=0 order by rounds
  </select>

  <!--    SELECT id,headimg,name,phonenum from member where id not in (SELECT memberid from activityprizeresult where activityid=#{activityid})-->

  <!-- SELECT DISTINCT m.id,m.headimg,m.name,m.phonenum from activitycomment ac LEFT JOIN member m on ac.memberid=m.id
    where memberid not in (SELECT memberid from activityprizeresult where activityid=#{activityid})-->

  <select id="getMayGetPrizeMember" resultType="java.util.Map">

    SELECT id,headimg,name,phonenum from member where id not in (SELECT memberid from activityprizeresult where activityid=#{activityid})

  </select>

    <select id="getCurrentActivityPrizeListById" resultType="com.emi.emiservice.entity.Activityprize">
        SELECT * from activityprize where activityid=#{activityid} and state=0 and isdel=0 order by rounds limit 0,1

    </select>

  <update id="updateActivityprizeState" >
    UPDATE activityprize ap set ap.state = 1 where ap.id = #{activityPrizeId}
  </update>


  <select id="getTotalticketnums" resultType="java.util.Map">
select COUNT(*) nums from (
select ar.memberid from activityprogramticketresult ar where ar.activityid = '${activityid}'
GROUP BY ar.memberid
)x


  </select>



</mapper>